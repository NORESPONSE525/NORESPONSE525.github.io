{
    "version": "https://jsonfeed.org/version/1",
    "title": " • All posts by \"活动记录\" tag",
    "description": "",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2025/06/15/computer-science/compile-principles/ch6/",
            "url": "http://example.com/2025/06/15/computer-science/compile-principles/ch6/",
            "title": "Ch6",
            "date_published": "2025-06-14T16:00:00.000Z",
            "content_html": "<h1 id=\"activation-recordstack-frame\"><a class=\"markdownIt-Anchor\" href=\"#activation-recordstack-frame\">#</a> Activation Record/Stack Frame</h1>\n<p>函数的栈帧是栈上用来放函数的局部变量、参数、返回地址以及其他临时变量的区域<br>\n stack 一般从高地址像低地址，heap 从低地址向高地址<br>\n layout:<br>\n<img data-src=\"f1.jpg\" alt></p>\n<ul>\n<li>incoming arguments: 存储 caller 传递给 callee 的参数</li>\n<li>frame pointer: 帧指针，用来访问 incoming arguments，从低向高是 argument 1, argument 2, …</li>\n<li>local variables: 存储函数的局部变量（还有一些保存在寄存器里）</li>\n<li>return address: 存储需要返回 caller 的哪里</li>\n<li>temporaries: 存储临时变量，复杂表达式拆出来的中间变量放的地方</li>\n<li>saved registers</li>\n<li>outgoing arguments: 存储当前函数要传递给别的函数的参数</li>\n<li>stack pointer: 栈指针，从低向高</li>\n</ul>\n<h2 id=\"函数调用流程\"><a class=\"markdownIt-Anchor\" href=\"#函数调用流程\">#</a> 函数调用流程：</h2>\n<ul>\n<li>g 调用 f 的时候</li>\n</ul>\n<ol>\n<li>进入 f 的时候，保存旧的 FP (g 的 FP)</li>\n<li>把 FP 设置为原来的 SP，把 SP = SP - frame size<br>\n<img data-src=\"f2.jpg\" alt></li>\n</ol>\n<ul>\n<li>f 返回的时候</li>\n</ul>\n<ol>\n<li>让 SP = FP (恢复 g 的 SP)</li>\n<li>从内存中读出 g 的 FP 恢复回去</li>\n</ol>\n<p>如果栈帧大小固定就只需要 FP 不需要 SP 了，因为 FP = SP + frame size</p>\n<h2 id=\"saved-register\"><a class=\"markdownIt-Anchor\" href=\"#saved-register\">#</a> saved register</h2>\n<p>函数 g 调用 f 的时候，用到了寄存器 r，调用 f 的时候要把 r 保存在 saved register 中，等调用结束再恢复回去</p>\n<ul>\n<li>caller-saved register: 函数调用的时候用到的寄存器，调用结束后可以恢复</li>\n<li>callee-saved register: 函数调用的时候用不到的寄存器，调用结束后不能恢复<br>\n<mark> FP 是由 callee 保存和恢复的</mark></li>\n</ul>\n<h2 id=\"参数传递\"><a class=\"markdownIt-Anchor\" href=\"#参数传递\">#</a> 参数传递</h2>\n",
            "tags": [
                "活动记录"
            ]
        }
    ]
}