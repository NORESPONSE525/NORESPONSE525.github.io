{
    "version": "https://jsonfeed.org/version/1",
    "title": "NoResponse's Blog • All posts by \"liveness analysis\" tag",
    "description": "成分复杂的CSer from ZJU",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2025/06/18/computer-science/compile-principles/ch10/",
            "url": "http://example.com/2025/06/18/computer-science/compile-principles/ch10/",
            "title": "Ch10",
            "date_published": "2025-06-17T16:00:00.000Z",
            "content_html": "<h1 id=\"liveness-analysis-活跃变量分析\"><a class=\"markdownIt-Anchor\" href=\"#liveness-analysis-活跃变量分析\">#</a> Liveness Analysis 活跃变量分析</h1>\n<p>判断在程序执行的某个点上，一个变量的值是否可能在未来被使用，是寄存器分配、死代码消除的基础</p>\n<h2 id=\"compiler-optimizations\"><a class=\"markdownIt-Anchor\" href=\"#compiler-optimizations\">#</a> Compiler Optimizations</h2>\n<ul>\n<li>Local: 基于 basic blocks</li>\n<li>Intraprocedural (or “global’): 基本块的控制流转移</li>\n<li>Interprocedural (or “whole-program”): Operate on &gt; 1 procedure, up to whole program; Sometimes, at link time (LTO, link time optimization)</li>\n</ul>\n<p>两步：</p>\n<ul>\n<li>Analyze program to gather “facts”</li>\n<li>Apply transformation (e.g., optimizations)</li>\n</ul>\n<h2 id=\"dataflow-analysis\"><a class=\"markdownIt-Anchor\" href=\"#dataflow-analysis\">#</a> Dataflow Analysis</h2>\n<p>Control Flow Graph: A directed graph 数据流图<br>\n– Nodes represent statements<br>\n– Edges represent control flow</p>\n<p>CFG 的简化：基本块<br>\n<img data-src=\"f1.jpg\" alt></p>\n<h3 id=\"变量的活跃性\"><a class=\"markdownIt-Anchor\" href=\"#变量的活跃性\">#</a> 变量的活跃性：</h3>\n<p>变量 x 在语句 s 处（执行 s 之前）处于活动状态，当且仅当满足以下三个条件：</p>\n<ol>\n<li>存在一个使用 x 的语句 s’；</li>\n<li>存在从 s 到 s’的路径；</li>\n<li>这条路径上没有对 x 进行任何赋值操作</li>\n</ol>\n<p>通过分析 liveness，我们可以实现：</p>\n<ol>\n<li>Register Allocation</li>\n<li>Code Optimizations：Remove unused assignments</li>\n<li>IR Construction： Optimize the construction of SSA</li>\n<li>Security/Reliability: Detect the use of uninitialized variables</li>\n</ol>\n<h2 id=\"dataflow-equations-for-liveness-构建数据流方程\"><a class=\"markdownIt-Anchor\" href=\"#dataflow-equations-for-liveness-构建数据流方程\">#</a> Dataflow Equations for Liveness 构建数据流方程</h2>\n<p>A CFG node has</p>\n<ul>\n<li>out-edges: lead to successor nodes</li>\n<li>in-edges: come from predecessor nodes</li>\n<li>pred [n]: the predecessors of node n       前驱</li>\n<li>succ [n]: the successors of node n     后继</li>\n</ul>\n",
            "tags": [
                "Liveness Analysis"
            ]
        }
    ]
}