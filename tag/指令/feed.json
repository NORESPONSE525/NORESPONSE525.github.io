{
    "version": "https://jsonfeed.org/version/1",
    "title": "NoResponse's Blog • All posts by \"指令\" tag",
    "description": "成分复杂的CSer from ZJU",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2025/08/01/computer-science/computer-organization/ch4/",
            "url": "http://example.com/2025/08/01/computer-science/computer-organization/ch4/",
            "title": "Ch4",
            "date_published": "2025-07-31T16:00:00.000Z",
            "content_html": "<h1 id=\"ch4-指令系统\"><a class=\"markdownIt-Anchor\" href=\"#ch4-指令系统\">#</a> Ch4 指令系统</h1>\n<h2 id=\"指令系统\"><a class=\"markdownIt-Anchor\" href=\"#指令系统\">#</a> 指令系统</h2>\n<h3 id=\"isa王道叫它指令集体系结构\"><a class=\"markdownIt-Anchor\" href=\"#isa王道叫它指令集体系结构\">#</a> ISA（王道叫它指令集体系结构）</h3>\n<p>指令系统 vs ISA</p>\n<p>ISA 完整地定义了软件和硬件之间的接口，规定了：</p>\n<ul>\n<li>指令格式（指令寻址方式，操作类型，操作数）</li>\n<li>操作数的类型、寻址方式、大端小端存放</li>\n<li>程序可访问的寄存器编号、个数和位数，存储空间大小和编址方式</li>\n<li>指令执行过程的控制方式（PC, condition code, …）</li>\n</ul>\n<h3 id=\"指令的基本格式\"><a class=\"markdownIt-Anchor\" href=\"#指令的基本格式\">#</a> 指令的基本格式</h3>\n<p>操作码 + 地址码<br>\n主存一般是按字节编址，所以指令字长通常为字节的整数倍</p>\n<ol>\n<li>\n<p>零地址指令<br>\n NOP, HLT<br>\n 不需要操作数。<br>\n零地址的运算类指令仅用在堆栈计算机中（操作数直接从栈顶弹出）</p>\n</li>\n<li>\n<p>一地址指令<br>\n OP, A1<br>\nOP(A1) -&gt; A1<br>\n 加 1，减 1，取反，求补，移位等<br>\n可能有一个操作数或者两个操作数</p>\n</li>\n</ol>\n<blockquote>\n<p>隐含约定目的地址的双操作数指令，地址码指明一个操作数，另一个操作数来自隐含寻址</p>\n</blockquote>\n<ol start=\"3\">\n<li>\n<p>二地址指令<br>\n OP, A1, A2<br>\n(A1)OP(A2) -&gt; A1</p>\n</li>\n<li>\n<p>三地址指令<br>\n OP, A1, A2, A3<br>\n(A1)OP(A2) -&gt; A3</p>\n</li>\n<li>\n<p>四地址指令<br>\n OP, A1, A2, A3, A4<br>\n (A1) OP (A2) -&gt; A3, A4 = 下一条将要执行指令的地址</p>\n</li>\n</ol>\n<h3 id=\"定长操作码指令格式\"><a class=\"markdownIt-Anchor\" href=\"#定长操作码指令格式\">#</a> 定长操作码指令格式</h3>\n<p>n 位 opcode 最多能表示 2^n 条指令<br>\n指令字长：单字长 (PC = PC + 1)、双字长 (PC = PC + 2)…</p>\n<h3 id=\"扩展操作码指令格式\"><a class=\"markdownIt-Anchor\" href=\"#扩展操作码指令格式\">#</a> 扩展操作码指令格式</h3>\n<p>才去可变长度操作码，分散地放在指令字的不同位置上<br>\n要求：</p>\n<ol>\n<li>不允许短码是长码的前缀</li>\n<li>各指令的操作码不能重复<br>\n<img data-src=\"f1.jpg\" alt><br>\n RISC-V 指令集</li>\n</ol>\n<h3 id=\"指令的操作类型\"><a class=\"markdownIt-Anchor\" href=\"#指令的操作类型\">#</a> 指令的操作类型</h3>\n<ol>\n<li>数据传送</li>\n</ol>\n<ul>\n<li>MOV: 寄存器到寄存器</li>\n<li>LOAD: 从内存读到寄存器</li>\n<li>STORE: 从寄存器写入内存</li>\n<li>PUSH</li>\n<li>POP</li>\n</ul>\n<ol start=\"2\">\n<li>\n<p>算术和逻辑运算<br>\n ADD, SUB, MUL, DIV, MOD, AND, OR, XOR, NOT, XOR, INC (加一), DEC (减一)</p>\n</li>\n<li>\n<p>移位<br>\n算术移位，逻辑移位，循环移位</p>\n</li>\n<li>\n<p>转移<br>\n JMP, BRANCH, CALL, RET, TRAP（中断隐指令是硬件实现的，只有 TRAP 是软指令）</p>\n</li>\n<li>\n<p>I/O 操作</p>\n</li>\n</ol>\n",
            "tags": [
                "指令"
            ]
        }
    ]
}