{
    "version": "https://jsonfeed.org/version/1",
    "title": "NoResponse's Blog • All posts by \"错题\" tag",
    "description": "成分复杂的CSer from ZJU",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2025/07/01/computer-science/computer-organization/%E9%94%99%E9%A2%98%E9%9B%86%E5%90%88/",
            "url": "http://example.com/2025/07/01/computer-science/computer-organization/%E9%94%99%E9%A2%98%E9%9B%86%E5%90%88/",
            "title": "错题集合",
            "date_published": "2025-06-30T16:00:00.000Z",
            "content_html": "<h1 id=\"错题集合\"><a href=\"#错题集合\" class=\"headerlink\" title=\"错题集合\"></a>错题集合</h1><h2 id=\"Ch2\"><a href=\"#Ch2\" class=\"headerlink\" title=\"Ch2\"></a>Ch2</h2><ol>\n<li>某计算机字长为8位，CPU中有一个8位加法器，已知无符号数x&#x3D;69, y&#x3D;38，若在该加法器中计算x-y，则加法器的两个输入短信息和输入的低位进位信息分别为（）</li>\n</ol>\n<ul>\n<li>0100 0101, 1101 1001, 1 <blockquote>\n<p>无符号数减法，在加法器中输入x的原码，y的取反和1</p>\n</blockquote>\n</li>\n</ul>\n<ol start=\"2\">\n<li>减法指令 “sub R1, R2, R3” 的功能为 “(R1) - (R2) -&gt; R3”, 该指令执行后将生成进位&#x2F;借位标志CF和溢出标志OF，若(R1) &#x3D; FFFF FFFFH, R2 &#x3D; FFFF FFF0H, 则该减法指令执行后，CF和OF分别为：</li>\n</ol>\n<ul>\n<li>CF &#x3D; 0, OF &#x3D; 0</li>\n</ul>\n<ol start=\"3\">\n<li>已知x, y为int类型，当x &#x3D; 100, y &#x3D; 200时，执行 “x - y”指令得到的溢出标志OF和结尾标志CF分别为0，1，那么当x &#x3D; 1-, y &#x3D; -20时，执行该指令得到的OF和CF分别为：</li>\n</ol>\n<ul>\n<li>OF &#x3D; 0, CF &#x3D; 1<blockquote>\n<p>ALU生成标志位时只负责计算，不管运算对象是有符号数还是无符号数。CF&#x3D;1表示当做无符号数运算时溢出，OF&#x3D;1表示当做有符号数运算时溢出。当做有符号数，10-(-20)没问题，所以OF&#x3D;0；把它俩当做无符号数的时候，x &#x3D; 10 &#x3D; 0000 0000 0000 0000 0000 0000 0000 1010，y &#x3D; -20 &#x3D; 1111 1111 1111 1111 1111 1111 1110 1100，此时x &lt; y，所以CF&#x3D;1。</p>\n</blockquote>\n</li>\n</ul>\n<ol start=\"4\">\n<li>下列关于整数乘法运算的叙述中，错误的是：D</li>\n</ol>\n<ul>\n<li>A. 用阵列乘法器实现的乘运算可以在一个时钟周期内完成 –正确，因为是组合逻辑理论上可以在一个clc里完成</li>\n<li>B. 用ALU和移位器实现的乘运算无法在一个时钟周期内完成</li>\n<li>C. 变量与常数的乘运算可编译优化为若干移位及家&#x2F;减运算指令</li>\n<li>D. 两个变量的乘运算无法编译转换为移位及加法等指令的循环实现</li>\n</ul>\n",
            "tags": [
                "错题"
            ]
        }
    ]
}