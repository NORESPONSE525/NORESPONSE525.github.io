{
    "version": "https://jsonfeed.org/version/1",
    "title": "NoResponse's Blog • All posts by \"软件工程\" category",
    "description": "成分复杂的CSer from ZJU",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2025/06/19/SE/Software%20Engineering/",
            "url": "http://example.com/2025/06/19/SE/Software%20Engineering/",
            "title": "SE note",
            "date_published": "2025-06-18T16:00:00.000Z",
            "content_html": "<h1 id=\"Ch2-Software-Engineering\"><a href=\"#Ch2-Software-Engineering\" class=\"headerlink\" title=\"Ch2 Software Engineering\"></a>Ch2 Software Engineering</h1><ul>\n<li>Definition: The application of a &#x3D;&#x3D;systematic&#x3D;&#x3D;, &#x3D;&#x3D;disciplined&#x3D;&#x3D;, &#x3D;&#x3D;quantifiable（可量化）&#x3D;&#x3D; approach to the &#x3D;&#x3D;development&#x3D;&#x3D;, &#x3D;&#x3D;operation&#x3D;&#x3D;, and &#x3D;&#x3D;maintenance&#x3D;&#x3D; of software</li>\n<li>软件工程是一个多层次的技术体系(a layered technology)<ul>\n<li>从下往上是a “quality” focus, process model, methods, tools, 反映了构建高质量软件产品的逻辑流程</li>\n</ul>\n</li>\n<li>软件过程（The Software Process）中的两个重要概念：通用过程框架（Common Process Framework）和 伞形活动（Umbrella Activities）<ul>\n<li>通用过程框架（Common Process Framework）： 软件开发过程中的一些基本要素<ul>\n<li>工作任务（work tasks）：指在软件开发的不同阶段中需要完成的具体任务。</li>\n<li>工作产品（work products）：指在执行工作任务过程中产生的各种文档、代码等成果物。</li>\n<li>里程碑与交付物（milestones &amp; deliverables）：里程碑是项目进展的重要节点，而交付物是在这些节点上需要提交的成果。</li>\n<li>质量保证检查点（QA checkpoints）：在整个开发过程中设置的检查点，用于评估和确保软件产品的质量。</li>\n</ul>\n</li>\n<li>伞形活动（Umbrella Activities）：软件开发过程中需要执行的活动<ul>\n<li>项目管理（Project management）：负责项目的规划、组织、协调和控制，确保项目按计划进行。</li>\n<li>质量保证（Quality assurance）：通过一系列措施确保软件产品的质量符合预定标准。</li>\n<li>工作产品生产（Work product production）：涉及创建和维护软件开发过程中产生的各种工作产品。</li>\n<li>测量（Measurement）：收集和分析数据以评估项目的状态和进度。</li>\n<li>正式技术评审（Formal technical reviews）：对软件的技术设计和实现进行系统性的审查。</li>\n<li>配置管理（Configuration management）：管理软件开发过程中各种配置项的变化，确保版本的一致性和可追溯性。</li>\n<li>重用管理（Reusability management）：促进软件组件和模块的重用，提高开发效率和软件质量。</li>\n<li>风险管理（Risk management）：识别、评估和应对可能影响项目成功的各种风险。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><strong>Generic Process Framework</strong> 通用的软件开发过程框架<ul>\n<li><strong>Communication</strong>: 与客户协作并收集需求</li>\n<li><strong>Planning</strong>: establishes engineering work plan, describes technical risks, lists resource requirements, work products produced, and defines work schedule</li>\n<li><strong>Modeling</strong>: 创建模型以帮助开发者和客户理解需求和设计</li>\n<li><strong>Construction</strong>: code &amp; test</li>\n<li><strong>Deployment</strong>: 交付软件供客户评估和反馈</li>\n</ul>\n</li>\n<li><strong>Process Adaptation</strong> 过程适配: 根据项目的具体需求、限制条件和特点，对软件开发过程进行定制和调整<ul>\n<li>overall &#x3D;&#x3D;flow&#x3D;&#x3D; of activities, actions, and tasks and the interdependencies among them</li>\n<li>degree to which &#x3D;&#x3D;actions and tasks&#x3D;&#x3D; are defined within each framework activity</li>\n<li>degree to which &#x3D;&#x3D;work products&#x3D;&#x3D; are identified and required</li>\n<li>manner which &#x3D;&#x3D;quality assurance&#x3D;&#x3D; activities are applied</li>\n<li>manner in which &#x3D;&#x3D;project tracking and control&#x3D;&#x3D; activities are applied</li>\n<li>overall degree of &#x3D;&#x3D;detail and rigor&#x3D;&#x3D; with which the process is described</li>\n<li>degree to which the &#x3D;&#x3D;customer and other stakeholders&#x3D;&#x3D; are involved with the project</li>\n<li>level of autonomy given to the &#x3D;&#x3D;software team&#x3D;&#x3D;</li>\n<li>degree to which &#x3D;&#x3D;team organization and roles&#x3D;&#x3D; are prescribed</li>\n</ul>\n</li>\n<li>The Essence of Practice<ul>\n<li><strong>Understand the problem</strong> (communication and analysis).</li>\n<li><strong>Plan a solution</strong> (modeling and software design).</li>\n<li><strong>Carry out the plan</strong> (code generation).</li>\n<li><strong>Examine the result for accuracy</strong> (testing and quality assurance).</li>\n</ul>\n</li>\n<li>General Principles 通用原则：软件开发过程中应遵循的一些核心指导思想或基本原则<ul>\n<li>The reason it all exists — Provide Value to users</li>\n<li>KISS — Keep It Simple, Stupid!</li>\n<li>Maintain the Vision</li>\n<li>What you produce, others will consume</li>\n<li>Be open to the future</li>\n<li>Plan ahead for reuse</li>\n<li>Think!</li>\n</ul>\n</li>\n<li>Software Development Myths 软件开发管理中常见的误解（Myth）及其背后的现实情况（Reality）<ul>\n<li>Management myths<ul>\n<li>标准和流程的有效性依赖于团队的理解和接受程度。</li>\n<li>软件开发是一个高度协作和复杂的创造性过程，简单地增加人力并不能解决进度问题。</li>\n<li>外包项目同样需要良好的管理和沟通能力，不能因为外包就忽视了对项目的控制和监督</li>\n</ul>\n</li>\n<li>Customer myths<ul>\n<li>详细的需求分析和规划</li>\n<li>充分的沟通与确认</li>\n<li>合理的进度评估</li>\n</ul>\n</li>\n<li>Practitioner’s myths<ul>\n<li>错误：一旦我们编写好程序并使其正常运行，我们的工作就完成了</li>\n<li>过早进入编码阶段可能会导致更多的返工和调整，从而延长项目周期</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"Ch3-Software-Process-Structure\"><a href=\"#Ch3-Software-Process-Structure\" class=\"headerlink\" title=\"Ch3 Software Process Structure\"></a>Ch3 Software Process Structure</h1><p>Umbrella Activities是贯穿整个软件开发过程的活动，Framework Activity是软件开发的核心阶段，如沟通、计划、建模、构建和部署，每个框架活动下都有具体的task set，每个task set中又包含多个具体的action</p>\n<ul>\n<li><p><strong>Process flow</strong> 过程流（对于之前提到的Generic Process Framework的五步）</p>\n<ol>\n<li>线性过程流（Linear process flow）</li>\n<li>迭代过程流（Iterative process flow）</li>\n<li>演化过程流（Evolutionary process flow）</li>\n<li>并行过程流（Parallel process flow）<br><img data-src=\"/f1.jpg\"></li>\n</ol>\n</li>\n<li><p><strong>Process Patterns</strong> 过程模式<br>Process patterns define a set of activities, actions, work tasks, work products and&#x2F;or related behaviors<br>提供了一种<code>template</code>用于定义模式<br><strong>Generic software pattern elements</strong>:</p>\n</li>\n<li><p>pattern name </p>\n</li>\n<li><p>Intent (objective of pattern) </p>\n</li>\n<li><p>Type (Task pattern, Stage pattern, Phase pattern)</p>\n</li>\n<li><p>Initial context</p>\n</li>\n<li><p>Solution</p>\n</li>\n<li><p>Resulting context</p>\n</li>\n<li><p>Related patterns</p>\n</li>\n<li><p>Known uses&#x2F;examples</p>\n</li>\n<li><p><strong>Process Assessment</strong><br>几种评估软件过程的方法：<br>SCAMPI (Standard CMMI Appraisal Method for Process Improvement)<br>SPICE (ISO&#x2F;IEC 15504)<br>CBA IPI (Capability Benchmarking Appraisal using the Integrated Process Improvement method)<br>ISO 9001:2000 for Software</p>\n</li>\n<li><p>The Capability Maturity Model Integration 能力成熟度模型集成（CMMI）</p>\n<ul>\n<li>Level 0: Incomplete </li>\n<li>Level 1: Performed </li>\n<li>Level 2: Managed</li>\n<li>Level 3: Defined</li>\n<li>Level 4: Quantitatively Managed 定量管理</li>\n<li>Level 5: Optimizing</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"Ch4-Process-Models\"><a href=\"#Ch4-Process-Models\" class=\"headerlink\" title=\"Ch4 Process Models\"></a>Ch4 Process Models</h1>",
            "tags": [
                "软件工程"
            ]
        }
    ]
}