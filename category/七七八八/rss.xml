<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>NoResponse&#39;s Blog • Posts by &#34;七七八八&#34; category</title>
        <link>http://example.com</link>
        <description>成分复杂的CSer from ZJU</description>
        <language>en</language>
        <pubDate>Wed, 15 Oct 2025 00:00:00 +0800</pubDate>
        <lastBuildDate>Wed, 15 Oct 2025 00:00:00 +0800</lastBuildDate>
        <category>软件工程</category>
        <category>人工智能</category>
        <category>C++</category>
        <category>自监督学习</category>
        <category>容器</category>
        <category>操作系统</category>
        <category>数据结构</category>
        <category>线性表</category>
        <category>串</category>
        <category>栈、队列和数组</category>
        <category>树与二叉树</category>
        <category>图论</category>
        <category>查找</category>
        <category>排序</category>
        <category>计算机网络</category>
        <category>编译原理</category>
        <category>fds</category>
        <category>Register Allocation</category>
        <category>Liveness Analysis</category>
        <category>词法分析</category>
        <category>语法分析</category>
        <category>抽象语法</category>
        <category>语义分析</category>
        <category>中间代码</category>
        <category>活动记录</category>
        <category>Basic Blocks and Traces</category>
        <category>指令选择</category>
        <category>计算机组成</category>
        <category>存储系统</category>
        <category>数据的表示与运算</category>
        <category>指令系统</category>
        <category>CPU</category>
        <category>总线</category>
        <category>错题</category>
        <category>I/O</category>
        <item>
            <guid isPermalink="true">http://example.com/2025/10/15/note/20251015/</guid>
            <title>20251015力扣刷题笔记</title>
            <link>http://example.com/2025/10/15/note/20251015/</link>
            <category>容器</category>
            <pubDate>Wed, 15 Oct 2025 00:00:00 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;一-c-常用容器总览&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#一-c-常用容器总览&#34;&gt;#&lt;/a&gt; 一、C++ 常用容器总览&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;容器&lt;/th&gt;
&lt;th&gt;类型&lt;/th&gt;
&lt;th&gt;底层结构&lt;/th&gt;
&lt;th&gt;是否有序&lt;/th&gt;
&lt;th&gt;是否去重&lt;/th&gt;
&lt;th&gt;主要用途&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;vector&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;序列容器&lt;/td&gt;
&lt;td&gt;动态数组&lt;/td&gt;
&lt;td&gt;否&lt;/td&gt;
&lt;td&gt;否&lt;/td&gt;
&lt;td&gt;动态数组，随机访问&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;deque&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;序列容器&lt;/td&gt;
&lt;td&gt;双端队列（分段连续）&lt;/td&gt;
&lt;td&gt;否&lt;/td&gt;
&lt;td&gt;否&lt;/td&gt;
&lt;td&gt;首尾高效插入&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;list&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;序列容器&lt;/td&gt;
&lt;td&gt;双向链表&lt;/td&gt;
&lt;td&gt;否&lt;/td&gt;
&lt;td&gt;否&lt;/td&gt;
&lt;td&gt;频繁中间插入 / 删除&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;forward_list&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;序列容器&lt;/td&gt;
&lt;td&gt;单向链表&lt;/td&gt;
&lt;td&gt;否&lt;/td&gt;
&lt;td&gt;否&lt;/td&gt;
&lt;td&gt;节省内存的链表&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;array&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;序列容器&lt;/td&gt;
&lt;td&gt;静态数组&lt;/td&gt;
&lt;td&gt;否&lt;/td&gt;
&lt;td&gt;否&lt;/td&gt;
&lt;td&gt;固定大小数组&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;stack&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;容器适配器&lt;/td&gt;
&lt;td&gt;&lt;code&gt;deque&lt;/code&gt; （默认）&lt;/td&gt;
&lt;td&gt;否&lt;/td&gt;
&lt;td&gt;否&lt;/td&gt;
&lt;td&gt;栈（LIFO）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;queue&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;容器适配器&lt;/td&gt;
&lt;td&gt;&lt;code&gt;deque&lt;/code&gt; （默认）&lt;/td&gt;
&lt;td&gt;否&lt;/td&gt;
&lt;td&gt;否&lt;/td&gt;
&lt;td&gt;队列（FIFO）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;priority_queue&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;容器适配器&lt;/td&gt;
&lt;td&gt;&lt;code&gt;vector&lt;/code&gt; （默认）&lt;/td&gt;
&lt;td&gt;是（堆序）&lt;/td&gt;
&lt;td&gt;否&lt;/td&gt;
&lt;td&gt;优先队列&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;set&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;关联容器&lt;/td&gt;
&lt;td&gt;红黑树&lt;/td&gt;
&lt;td&gt;是（升序）&lt;/td&gt;
&lt;td&gt;是&lt;/td&gt;
&lt;td&gt;有序唯一集合&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;multiset&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;关联容器&lt;/td&gt;
&lt;td&gt;红黑树&lt;/td&gt;
&lt;td&gt;是&lt;/td&gt;
&lt;td&gt;否&lt;/td&gt;
&lt;td&gt;有序可重复集合&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;map&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;关联容器&lt;/td&gt;
&lt;td&gt;红黑树&lt;/td&gt;
&lt;td&gt;是&lt;/td&gt;
&lt;td&gt;是（按键）&lt;/td&gt;
&lt;td&gt;有序键值对&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;multimap&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;关联容器&lt;/td&gt;
&lt;td&gt;红黑树&lt;/td&gt;
&lt;td&gt;是&lt;/td&gt;
&lt;td&gt;否&lt;/td&gt;
&lt;td&gt;有序可重复键值对&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;unordered_set&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;无序关联容器&lt;/td&gt;
&lt;td&gt;哈希表&lt;/td&gt;
&lt;td&gt;否&lt;/td&gt;
&lt;td&gt;是&lt;/td&gt;
&lt;td&gt;无序唯一集合&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;unordered_multiset&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;无序关联容器&lt;/td&gt;
&lt;td&gt;哈希表&lt;/td&gt;
&lt;td&gt;否&lt;/td&gt;
&lt;td&gt;否&lt;/td&gt;
&lt;td&gt;无序可重复集合&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;unordered_map&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;无序关联容器&lt;/td&gt;
&lt;td&gt;哈希表&lt;/td&gt;
&lt;td&gt;否&lt;/td&gt;
&lt;td&gt;是（按键）&lt;/td&gt;
&lt;td&gt;无序键值对&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;unordered_multimap&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;无序关联容器&lt;/td&gt;
&lt;td&gt;哈希表&lt;/td&gt;
&lt;td&gt;否&lt;/td&gt;
&lt;td&gt;否&lt;/td&gt;
&lt;td&gt;无序可重复键值对&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;二-各容器操作复杂度对比&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#二-各容器操作复杂度对比&#34;&gt;#&lt;/a&gt; 二、各容器操作复杂度对比&lt;/h2&gt;
&lt;h3 id=&#34;1-vectort&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#1-vectort&#34;&gt;#&lt;/a&gt; 1.  &lt;code&gt;vector&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;底层&lt;/strong&gt;：动态数组（连续内存）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;特点&lt;/strong&gt;：支持随机访问，尾部操作快，中间插入慢。&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;操作&lt;/th&gt;
&lt;th&gt;复杂度&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;push_back()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;平均 O (1)，最坏 O (n)&lt;/td&gt;
&lt;td&gt;扩容时复制&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;pop_back()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;O(1)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;insert(it, x)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;O(n)&lt;/td&gt;
&lt;td&gt;中间插入需移动&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;erase(it)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;O(n)&lt;/td&gt;
&lt;td&gt;删除后需移动&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator[]&lt;/code&gt;  /  &lt;code&gt;at()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;O(1)&lt;/td&gt;
&lt;td&gt;随机访问&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;size()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;O(1)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;begin()&lt;/code&gt;  /  &lt;code&gt;end()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;O(1)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;blockquote&gt;
&lt;p&gt;适合：频繁随机访问、尾部增删&lt;br&gt;
不适合：频繁中间插入 / 删除&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h3 id=&#34;2-dequet双端队列&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#2-dequet双端队列&#34;&gt;#&lt;/a&gt; 2.  &lt;code&gt;deque&amp;lt;T&amp;gt;&lt;/code&gt; （双端队列）&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;底层&lt;/strong&gt;：分段连续数组（多个小数组）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;特点&lt;/strong&gt;：首尾操作都快，支持随机访问。&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;操作&lt;/th&gt;
&lt;th&gt;复杂度&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;push_front()&lt;/code&gt;  /  &lt;code&gt;push_back()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;O(1)&lt;/td&gt;
&lt;td&gt;首尾插入都快&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;pop_front()&lt;/code&gt;  /  &lt;code&gt;pop_back()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;O(1)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;insert()&lt;/code&gt;  /  &lt;code&gt;erase()&lt;/code&gt; （中间）&lt;/td&gt;
&lt;td&gt;O(n)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator[]&lt;/code&gt;  /  &lt;code&gt;at()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;O(1)&lt;/td&gt;
&lt;td&gt;支持随机访问&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;size()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;O(1)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;blockquote&gt;
&lt;p&gt;适合：需要首尾高效插入的场景（如滑动窗口）&lt;br&gt;
注意：迭代器失效规则比  &lt;code&gt;vector&lt;/code&gt;  复杂&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h3 id=&#34;3-listt双向链表&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#3-listt双向链表&#34;&gt;#&lt;/a&gt; 3.  &lt;code&gt;list&amp;lt;T&amp;gt;&lt;/code&gt; （双向链表）&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;底层&lt;/strong&gt;：双向链表&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;特点&lt;/strong&gt;：任意位置插入 / 删除 O (1)，但不支持随机访问。&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;操作&lt;/th&gt;
&lt;th&gt;复杂度&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;push_front()&lt;/code&gt;  /  &lt;code&gt;push_back()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;O(1)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;insert(it, x)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;O(1)&lt;/td&gt;
&lt;td&gt;已知位置&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;erase(it)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;O(1)&lt;/td&gt;
&lt;td&gt;已知位置&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator[]&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;不支持&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;find()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;O(n)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;size()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;C++11 起 O (1)，之前 O (n)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;blockquote&gt;
&lt;p&gt;适合：频繁中间插入 / 删除&lt;br&gt;
不适合：随机访问、缓存不友好&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h3 id=&#34;4-forward_listt单向链表&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#4-forward_listt单向链表&#34;&gt;#&lt;/a&gt; 4.  &lt;code&gt;forward_list&amp;lt;T&amp;gt;&lt;/code&gt; （单向链表）&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;底层&lt;/strong&gt;：单向链表&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;特点&lt;/strong&gt;：比  &lt;code&gt;list&lt;/code&gt;  更省内存，但只能单向遍历。&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;操作&lt;/th&gt;
&lt;th&gt;复杂度&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;push_front()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;O(1)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;insert_after()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;O(1)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;erase_after()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;O(1)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;不支持  &lt;code&gt;push_back()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;—&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;blockquote&gt;
&lt;p&gt;适合：内存敏感、只需前向遍历的场景&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h3 id=&#34;5-arrayt-n&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#5-arrayt-n&#34;&gt;#&lt;/a&gt; 5.  &lt;code&gt;array&amp;lt;T, N&amp;gt;&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;底层&lt;/strong&gt;：静态数组（栈上内存）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;特点&lt;/strong&gt;：大小固定，性能极高。&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;操作&lt;/th&gt;
&lt;th&gt;复杂度&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;operator[]&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;O(1)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;at()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;O(1)&lt;/td&gt;
&lt;td&gt;带边界检查&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;size()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;O(1)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;所有操作&lt;/td&gt;
&lt;td&gt;O(1)&lt;/td&gt;
&lt;td&gt;固定大小&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;blockquote&gt;
&lt;p&gt;适合：小数据、固定大小、高性能场景&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h3 id=&#34;6-sett-mapkv&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#6-sett-mapkv&#34;&gt;#&lt;/a&gt; 6.  &lt;code&gt;set&amp;lt;T&amp;gt;&lt;/code&gt;  /  &lt;code&gt;map&amp;lt;K,V&amp;gt;&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;底层&lt;/strong&gt;：&lt;strong&gt;红黑树&lt;/strong&gt;（自平衡二叉搜索树）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;特点&lt;/strong&gt;：自动排序、自动去重（ &lt;code&gt;set&lt;/code&gt;  和  &lt;code&gt;map&lt;/code&gt;  键唯一）&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;操作&lt;/th&gt;
&lt;th&gt;复杂度&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;insert()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;O(log n)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;find()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;O(log n)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;erase()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;O(log n)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;size()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;O(1)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;遍历&lt;/td&gt;
&lt;td&gt;O(n)&lt;/td&gt;
&lt;td&gt;有序输出&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;blockquote&gt;
&lt;p&gt;适合：需要有序、去重、查找的场景&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h3 id=&#34;7-unordered_sett-unordered_mapkv&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#7-unordered_sett-unordered_mapkv&#34;&gt;#&lt;/a&gt; 7.  &lt;code&gt;unordered_set&amp;lt;T&amp;gt;&lt;/code&gt;  /  &lt;code&gt;unordered_map&amp;lt;K,V&amp;gt;&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;底层&lt;/strong&gt;：&lt;strong&gt;哈希表&lt;/strong&gt;（开链法或开放寻址）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;特点&lt;/strong&gt;：平均极快，但无序，最坏 O (n)&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;操作&lt;/th&gt;
&lt;th&gt;复杂度&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;insert()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;平均 O (1)，最坏 O (n)&lt;/td&gt;
&lt;td&gt;哈希冲突时退化&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;find()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;平均 O (1)，最坏 O (n)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;erase()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;平均 O (1)，最坏 O (n)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;size()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;O(1)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;负载因子&lt;/td&gt;
&lt;td&gt;影响性能&lt;/td&gt;
&lt;td&gt;可调  &lt;code&gt;max_load_factor()&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;blockquote&gt;
&lt;p&gt;适合：大数据、高频查找、不在乎顺序&lt;br&gt;
不适合：需要有序输出&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;8-容器适配器stack-queue-priority_queue&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#8-容器适配器stack-queue-priority_queue&#34;&gt;#&lt;/a&gt; 8. 容器适配器（ &lt;code&gt;stack&lt;/code&gt; ,  &lt;code&gt;queue&lt;/code&gt; ,  &lt;code&gt;priority_queue&lt;/code&gt; ）&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;容器&lt;/th&gt;
&lt;th&gt;默认底层&lt;/th&gt;
&lt;th&gt;特点&lt;/th&gt;
&lt;th&gt;操作复杂度&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;stack&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;deque&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;后进先出（LIFO）&lt;/td&gt;
&lt;td&gt;&lt;code&gt;push&lt;/code&gt; / &lt;code&gt;pop&lt;/code&gt; / &lt;code&gt;top&lt;/code&gt; : O(1)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;queue&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;deque&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;先进先出（FIFO）&lt;/td&gt;
&lt;td&gt;&lt;code&gt;push&lt;/code&gt; / &lt;code&gt;pop&lt;/code&gt; / &lt;code&gt;front&lt;/code&gt; : O(1)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;priority_queue&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;vector&lt;/code&gt;  + 堆&lt;/td&gt;
&lt;td&gt;最大 / 最小元素在顶&lt;/td&gt;
&lt;td&gt;&lt;code&gt;push&lt;/code&gt; : O(log n),  &lt;code&gt;top&lt;/code&gt; : O(1),  &lt;code&gt;pop&lt;/code&gt; : O(log n)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;blockquote&gt;
&lt;p&gt;它们&lt;strong&gt;不是真正容器&lt;/strong&gt;，而是基于其他容器的封装，接口受限。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;选择&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#选择&#34;&gt;#&lt;/a&gt; 选择&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;需求&lt;/th&gt;
&lt;th&gt;推荐容器&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;动态数组，随机访问&lt;/td&gt;
&lt;td&gt;&lt;code&gt;vector&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;首尾都能高效插入&lt;/td&gt;
&lt;td&gt;&lt;code&gt;deque&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;频繁中间插入 / 删除&lt;/td&gt;
&lt;td&gt;&lt;code&gt;list&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;固定大小数组&lt;/td&gt;
&lt;td&gt;&lt;code&gt;array&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;快速查找、去重（不在乎顺序）&lt;/td&gt;
&lt;td&gt;&lt;code&gt;unordered_set&lt;/code&gt;  /  &lt;code&gt;unordered_map&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;需要有序输出、去重&lt;/td&gt;
&lt;td&gt;&lt;code&gt;set&lt;/code&gt;  /  &lt;code&gt;map&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;栈操作&lt;/td&gt;
&lt;td&gt;&lt;code&gt;stack&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;队列操作&lt;/td&gt;
&lt;td&gt;&lt;code&gt;queue&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;找最大 / 最小元素（堆）&lt;/td&gt;
&lt;td&gt;&lt;code&gt;priority_queue&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;总结&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#总结&#34;&gt;#&lt;/a&gt; 总结&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;口诀&lt;/th&gt;
&lt;th&gt;对应容器&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;“要快用 unordered”&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;unordered_set/map&lt;/code&gt; （平均 O (1)）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;“要序用 set/map”&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;set/map&lt;/code&gt; （O (log n)，有序）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;“通用选 vector”&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;vector&lt;/code&gt; （最常用）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;“首尾快用 deque”&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;deque&lt;/code&gt; （双端高效）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;“中间删用 list”&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;list&lt;/code&gt; （任意位置 O (1) 删除）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;“最大最小用堆”&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;priority_queue&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2025/08/02/note/20250802/</guid>
            <title>20250802阅读论文</title>
            <link>http://example.com/2025/08/02/note/20250802/</link>
            <category>自监督学习</category>
            <pubDate>Sat, 02 Aug 2025 00:00:00 +0800</pubDate>
            <description><![CDATA[ &lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;标题&lt;/strong&gt;：Self-supervised representation learning from 12-lead ECG data&lt;br&gt;
&lt;strong&gt; 作者&lt;/strong&gt;：Temesgen Mehari, Nils Strodthoff&lt;br&gt;
&lt;strong&gt; 期刊&lt;/strong&gt;：&lt;em&gt;Computers in Biology and Medicine&lt;/em&gt;, 2022&lt;br&gt;
&lt;strong&gt;DOI&lt;/strong&gt;: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kb2kub3JnLzEwLjEwMTYvai5jb21wYmlvbWVkLjIwMjEuMTA1MTE0&#34;&gt;10.1016/j.compbiomed.2021.105114&lt;/span&gt;&lt;br&gt;
&lt;strong&gt; 关键词&lt;/strong&gt;：自监督学习、对比学习、心电图（ECG）、时间序列分析、深度学习&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;12-lead ECG 是常见生物信号，但高质量标注数据稀缺，标注依赖专家，成本高，尤其对罕见病或睡眠相关心血管事件更难获取标签，然而，无标签 ECG 数据海量存在，因此利用自监督学习从大量无标签 ECG 中预训练模型，学习通用特征表示，再用于下游任务微调，提升性能与标签效率。&lt;/p&gt;
&lt;p&gt;本文采用  &lt;code&gt;xresnet1d50&lt;/code&gt;  作为主干网络，对比了不同的自监督学习方法。&lt;/p&gt;
&lt;h2 id=&#34;xresnet1d&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#xresnet1d&#34;&gt;#&lt;/a&gt; xresnet1d&lt;/h2&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly90aW1lc2VyaWVzYWkuZ2l0aHViLmlvL3RzYWkvbW9kZWxzLnhyZXNuZXQxZC5odG1s&#34;&gt;https://timeseriesai.github.io/tsai/models.xresnet1d.html&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;instance-discrimination&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#instance-discrimination&#34;&gt;#&lt;/a&gt; Instance Discrimination&lt;/h2&gt;
&lt;h3 id=&#34;simclr&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#simclr&#34;&gt;#&lt;/a&gt; SimCLR&lt;/h3&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9hcnhpdi5vcmcvYWJzLzIwMDIuMDU3MDk=&#34;&gt;T. Chen, S. Kornblith, M. Norouzi, G. Hinton, A simple framework for contrastive learning of visual representations, in: International Conference on Machine Learning, 2020.&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;byol&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#byol&#34;&gt;#&lt;/a&gt; BYOL&lt;/h3&gt;
&lt;h3 id=&#34;swav&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#swav&#34;&gt;#&lt;/a&gt; SwAV&lt;/h3&gt;
&lt;h3 id=&#34;cpc&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#cpc&#34;&gt;#&lt;/a&gt; CPC&lt;/h3&gt;
&lt;h2 id=&#34;latent-forecasting&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#latent-forecasting&#34;&gt;#&lt;/a&gt; Latent Forecasting&lt;/h2&gt;
 ]]></description>
        </item>
    </channel>
</rss>
